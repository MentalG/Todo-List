{"version":3,"sources":["components/app-header/app-header.jsx","components/search-panel/search-panel.jsx","components/item-status-filter/item-status-filter.jsx","components/todo-list-item/todo-list-item.jsx","components/todo-list/todo-list.jsx","components/item-add-form/item-add-form.jsx","components/app/app.jsx","index.js"],"names":["AppHeader","todo","done","className","SearchPanel","onSearchEnter","onChange","e","target","value","placeholder","ItemStatusFilter","buttons","name","label","this","props","clickHandle","filter","map","clazz","onClick","textContent","toLowerCase","type","key","Component","TodoListItem","onTrashClicked","onToggleImportant","onToggleDone","important","concat","TodoList","todoData","onDeleted","elements","item","id","itemProps","ItemAddForm","state","onLabelChange","setState","onSubmit","preventDefault","onAdd","App","maxId","createTodoItem","onToggle","arr","property","object","search","array","string","length","indexOf","items","term","addItem","deleteItem","element","doneCount","todoCount","visibleItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab43c8fa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//css\r\nimport './app-header.css'\r\n\r\nconst AppHeader = ({ todo, done }) => {\r\n    return (\r\n        <div className='app-header d-flex'>\r\n            <h1>Todo List</h1>\r\n            <h2>{todo} more to do, {done} done</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader","import React from 'react'\r\n\r\n//css\r\nimport './search-panel.css'\r\n\r\nconst SearchPanel = ({ onSearchEnter }) => {\r\n    return (\r\n        <input\r\n            onChange={(e) => onSearchEnter(e.target.value)}\r\n            className='search-input form-control'\r\n            placeholder='search' />\r\n    )\r\n}\r\n\r\nexport default SearchPanel","import React, { Component } from 'react'\r\n\r\n//css \r\nimport './item-status-filter.css'\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        { name: 'all', label: 'All' },\r\n        { name: 'active', label: 'Active' },\r\n        { name: 'done', label: 'Done' }\r\n    ]\r\n\r\n    render () {\r\n        const { clickHandle, filter } = this.props\r\n\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n        const isActive = filter === name;\r\n        const clazz = isActive ? 'btn btn-info' : 'btn btn-outline-secondary'\r\n\r\n            return (\r\n                <button\r\n                    onClick={(e) => clickHandle(e.target.textContent.toLowerCase())}\r\n                    type='button'\r\n                    className={clazz}\r\n                    key={name}>\r\n                    {label}\r\n                </button>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className='btn-group'>\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n//css\r\nimport './todo-list-item.css'\r\n\r\nexport default class TodoListItem extends Component {\r\n    render () {\r\n        const { label, onTrashClicked, onToggleImportant, onToggleDone, done, important } = this.props\r\n        let className = 'item';\r\n\r\n        if (done) {\r\n            className = className.concat(' done')\r\n        }\r\n        if (important) {\r\n            className = className.concat(' important')\r\n        }\r\n\r\n        return (\r\n            <div className='list-item'>\r\n                <span className={className} onClick={() => onToggleDone()}>{label}</span>\r\n                <div className='action-buttons'>\r\n                    <i className=\"icon fa fa-trash\" onClick={() => onTrashClicked()}></i>\r\n                    <i className=\"icon fa fa-btc\" onClick={() => onToggleImportant()}></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\n//pages\r\nimport TodoListItem from '../todo-list-item/todo-list-item'\r\n\r\n//css\r\nimport './todo-list.css'\r\n\r\nconst TodoList = ({ todoData, onDeleted, onToggleImportant, onToggleDone }) => {\r\n    \r\n    const elements = todoData.map((item) => {\r\n        const { id, ...itemProps } = item;  \r\n\r\n        return (<li key={id} className='list-group-item'>\r\n            <TodoListItem \r\n            {...itemProps}\r\n             onTrashClicked={() => onDeleted(id)}\r\n             onToggleImportant={() => onToggleImportant(id)}\r\n             onToggleDone={() => onToggleDone(id)}\r\n             />\r\n        </li>)\r\n    })\r\n\r\n    return (\r\n        <ul className='list-group todo-list'>\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList","import React, { Component } from 'react'\r\n\r\n//css \r\nimport './item-add-form.css'\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.label !== '') {\r\n            this.props.onAdd(this.state.label)\r\n            this.setState({\r\n                label: ''\r\n            })\r\n        } \r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <form\r\n                className='item-add-form d-flex'\r\n                onSubmit={(e) => this.onSubmit(e)}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    className='add-input form-control'\r\n                    onChange={(e) => this.onLabelChange(e)}\r\n                    placeholder='What needs to be done'\r\n                    value={this.state.label}\r\n                />\r\n                <button\r\n                    className=\"btn btn-info btn-add\"\r\n                >\r\n                    Add\r\n            </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n//components \r\nimport AppHeader from '../app-header/app-header'\r\nimport SearchPanel from '../search-panel/search-panel'\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter'\r\nimport TodoList from '../todo-list/todo-list'\r\nimport ItemAddForm from '../item-add-form/item-add-form'\r\n\r\n//css\r\nimport './app.css'\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 0;\r\n\r\n    createTodoItem = (label = 'Added') => {\r\n        return { label, important: false, done: false, id: this.maxId++ }\r\n    }\r\n\r\n    onToggle = (arr, id, property) => {\r\n        return arr.map((object) => object.id === id ? { ...object, [property]: !object[property] } : object)\r\n    }\r\n\r\n    search = (array, string) => {\r\n        if (string.length === 0) {\r\n            return array\r\n        }\r\n\r\n        return array.filter(item => item.label.toLowerCase().indexOf(string.toLowerCase()) !== -1)\r\n    }\r\n\r\n    filter = (items, filter) => {\r\n        switch (filter) {\r\n            case 'all': \r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done)\r\n            case 'done':\r\n                return items.filter((item) => item.done)\r\n            default :\r\n                return items\r\n        }\r\n    }\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Build React App'),\r\n            this.createTodoItem('Have a lunch')\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    }\r\n\r\n\r\n    addItem = (label) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: [...todoData].concat(this.createTodoItem(label))\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: todoData.filter(element => element.id !== id)\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.onToggle(todoData, id, 'important')\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.onToggle(todoData, id, 'done')\r\n            }\r\n        })\r\n    }\r\n\r\n    onSearchEnter = (value) => {\r\n        this.setState(({ term }) => {\r\n            return {\r\n                term: value\r\n            }\r\n        })\r\n    }\r\n\r\n    clickHandle = (value) => {\r\n        this.setState(({ filter }) => {\r\n            return {\r\n                filter : value\r\n            }\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const { todoData, term, filter } = this.state\r\n        const doneCount = todoData.filter((element) => element.done).length\r\n        const todoCount = todoData.length - doneCount\r\n        const visibleItems = this.filter(this.search(todoData, term), filter)\r\n\r\n        return (\r\n            <div className='app'>\r\n                <AppHeader\r\n                    todo={todoCount}\r\n                    done={doneCount} />\r\n                <div className='search-bar'>\r\n                    <SearchPanel\r\n                        onSearchEnter={(value) => this.onSearchEnter(value)}\r\n                    />\r\n                    <ItemStatusFilter \r\n                    clickHandle={(value) => this.clickHandle(value)}\r\n                    filter={filter} />\r\n                </div>\r\n                <TodoList\r\n                    todoData={visibleItems}\r\n                    onDeleted={(id) => this.deleteItem(id)}\r\n                    onToggleImportant={(id) => this.onToggleImportant(id)}\r\n                    onToggleDone={(id) => this.onToggleDone(id)}\r\n                />\r\n                <ItemAddForm\r\n                    onAdd={(label) => this.addItem(label)} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}